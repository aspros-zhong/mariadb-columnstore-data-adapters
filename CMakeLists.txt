cmake_minimum_required(VERSION 2.8)

set(VERSION "1.1.5")

option(RPM "Build an RPM" OFF)
IF(RPM)
	SET(CPACK_GENERATOR "RPM")
	SET(CPACK_RPM_PACKAGE_VERSION ${VERSION})
	SET(CPACK_RPM_PACKAGE_RELEASE "1")
	SET(CPACK_RPM_PACKAGE_NAME "mariadb-columnstore-data-adpters")
	SET(ENGINE_ARCH "x86_64")
	SET(CPACK_PACKAGE_FILE_NAME "${CPACK_RPM_PACKAGE_NAME}-${CPACK_RPM_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}-${ENGINE_ARCH}-${RPM}")
	SET(CPACK_RPM_COMPONENT_INSTALL ON)
	SET(CPACK_COMPONENTS_ALL avro_kafka_adapter mcskafka msx_adapter)

	SET(CPACK_RPM_AVRO_KAFKA_ADAPTER_PACKAGE_NAME "mariadb-columnstore-kafka-avro-adapters")
	SET(CPACK_RPM_AVRO_KAFKA_ADAPTER_FILE_NAME "${CPACK_RPM_AVRO_ALL_KAFKA_ADAPTER_PACKAGE_NAME}-${CPACK_RPM_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}-${ENGINE_ARCH}-${RPM}")
	
	SET(CPACK_RPM_MCSKAFKA_PACKAGE_NAME "mariadb-columnstore-kafka-adapters")
	SET(CPACK_RPM_MCSKAFKA_FILE_NAME "${CPACK_RPM_MCSKAFKA_PACKAGE_NAME}-${CPACK_RPM_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}-${ENGINE_ARCH}-${RPM}")

	SET(CPACK_RPM_MSX_ADAPTER_PACKAGE_NAME "mariadb-columnstore-maxscale-cdc-adapters")
	SET(CPACK_RPM_MSX_ADAPTER_FILE_NAME "${CPACK_RPM_MSX_ADAPTER_PACKAGE_NAME}-${CPACK_RPM_PACKAGE_VERSION}-${CPACK_RPM_PACKAGE_RELEASE}-${ENGINE_ARCH}-${RPM}")
	
	include(CPack)
ENDIF(RPM)

option(DEB "Build a DEB" OFF)
IF(DEB)
	SET(CPACK_GENERATOR "DEB")
	SET(CPACK_DEBIAN_PACKAGE_VERSION ${VERSION})
	SET(CPACK_DEBIAN_PACKAGE_RELEASE "1")
	SET(CPACK_DEBIAN_PACKAGE_NAME "mariadb-columnstore-data-adapters")
	SET(CPACK_PACKAGE_CONTACT "MariaDB Corporation")
	SET(ENGINE_ARCH "x86_64")
	SET(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
	SET(CPACK_PACKAGE_FILE_NAME "${CPACK_DEBIAN_PACKAGE_NAME}-${CPACK_DEBIAN_PACKAGE_VERSION}-${CPACK_DEBIAN_PACKAGE_RELEASE}-${ENGINE_ARCH}-${DEB}")
	SET(CPACK_DEB_COMPONENT_INSTALL ON)
	SET(CPACK_COMPONENTS_ALL avro_kafka_adapter mcskafka msx_adapter)

	SET(CPACK_DEBIAN_AVRO_KAFKA_ADAPTER_PACKAGE_NAME "mariadb-columnstore-kafka-avro-adapters")
	SET(CPACK_DEBIAN_AVRO_KAFKA_ADAPTER_FILE_NAME "${CPACK_DEBIAN_AVRO_KAFKA_ADAPTER_PACKAGE_NAME}-${CPACK_DEBIAN_PACKAGE_VERSION}-${CPACK_DEBIAN_PACKAGE_RELEASE}-${ENGINE_ARCH}-${DEB}.deb")
	
	SET(CPACK_DEBIAN_MCSKAFKA_PACKAGE_NAME "mariadb-columnstore-kafka-adapters")
	SET(CPACK_DEBIAN_MCSKAFKA_FILE_NAME "${CPACK_DEBIAN_MCSKAFKA_PACKAGE_NAME}-${CPACK_DEBIAN_PACKAGE_VERSION}-${CPACK_DEBIAN_PACKAGE_RELEASE}-${ENGINE_ARCH}-${DEB}.deb")

	SET(CPACK_DEBIAN_MSX_ADAPTER_PACKAGE_NAME "mariadb-columnstore-maxscale-cdc-adapters")
	SET(CPACK_DEBIAN_MSX_ADAPTER_FILE_NAME "${CPACK_DEBIAN_MSX_ADAPTER_PACKAGE_NAME}-${CPACK_DEBIAN_PACKAGE_VERSION}-${CPACK_DEBIAN_PACKAGE_RELEASE}-${ENGINE_ARCH}-${DEB}.deb")

	include(CPack)
ENDIF(DEB)

option(KAFKA "Build the Kafka-Avro to ColumnStore Data Adatper" ON)

IF(KAFKA)
	add_subdirectory(kafka-avro-adapter)
ENDIF(KAFKA)

option(KETTLE "Build the Kettle / PDI ColumnStore Bulk Write Plugin" ON)

IF(KETTLE)
	add_subdirectory(kettle-columnstore-bulk-exporter-plugin)
ENDIF(KETTLE)

option(MAX_CDC "Build the MaxScale CDC to ColumnStore Data Adapter" OFF)

IF(MAX_CDC)
	add_subdirectory(maxscale-cdc-adapter)
ENDIF(MAX_CDC)

option(MAX_KAFKA "Build the MaxScale Kafka+CDC to ColumnStore Data Adapter" ON)

IF(MAX_KAFKA)
	add_subdirectory(maxscale-kafka-adapter)
ENDIF(MAX_KAFKA)

option(TEST_RUNNER "Build the test suite" OFF)

if (TEST_RUNNER)
  include(CTest)
endif (TEST_RUNNER)

MESSAGE(STATUS "-----------------------------------------------")
MESSAGE(STATUS "KAFKA = ${KAFKA}")
MESSAGE(STATUS "KETTLE = ${KETTLE}")
MESSAGE(STATUS "MAX_CDC = ${MAX_CDC}")
MESSAGE(STATUS "MAX_KAFKA = ${MAX_KAFKA}")
MESSAGE(STATUS "TEST_RUNNER = ${TEST_RUNNER}")
MESSAGE(STATUS "RPM = ${RPM}")
MESSAGE(STATUS "DEB = ${DEB}")
MESSAGE(STATUS "Change a values with: cmake -D<Variable>=<Value>")
MESSAGE(STATUS "------------------------------------------------")
MESSAGE(STATUS)
